; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "JustWorksClient"
#define MyAppVersion "1.0"
#define MyAppPublisher "Drpk14 Inc."
#define MyAppURL "https://www.example.com/"
#define MyAppExeName "JustWorksClient.exe"
#define MyAppAssocName MyAppName + " File"
#define MyAppAssocExt ".myp"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{D6B3350F-A159-4F6E-A924-9D01805E84D3}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
ChangesAssociations=yes
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputBaseFilename=JustWorksClient
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages] 
Name: "spanish"; MessagesFile: "compiler:Languages\Spanish.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "C:\Users\David\Documents\Proyectos\JustWorks\instaladores\Launchers\cliente\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\David\Documents\Proyectos\JustWorks\desktop\complementos\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs


[Registry]
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppAssocKey}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""
Root: HKA; Subkey: "Software\Classes\Applications\{#MyAppExeName}\SupportedTypes"; ValueType: string; ValueName: ".myp"; ValueData: ""

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent 

[Code]
var
  Page: TInputQueryWizardPage;

procedure InitializeWizard;
begin
  Page := CreateInputQueryPage(wpWelcome, 'Server Configuration', 'Please insert the next information:', '');
  Page.Add('IP:', False);
  Page.Add('TCPPort:', False);
  Page.Add('UDPPort:', False);
end;

function FieldsAreNotEmpty: Boolean;
begin
  Result := (Trim(Page.Values[0]) <> '') and (Trim(Page.Values[1]) <> '');
end;

procedure CurStepChanged(CurStep: TSetupStep);
var
  FileName: string;
  Content: string;
begin
  if CurStep = ssPostInstall then
  begin
    FileName := ExpandConstant('{app}\config.ini');
    Content := 'host = ' + Page.Values[0] + #13#10 +
               'port = ' + Page.Values[1] + #13#10 +
               'UDPPort = ' + Page.Values[2];
    SaveStringToFile(FileName, Content, False);
  end;
end;


